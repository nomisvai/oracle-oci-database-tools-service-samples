#####################################
#
# This is the properties file used by the unit tests, the information provided here will be used
# to retrieve a wallet from an autonomous database, store it in the specified vault along with the db password,
# and create a database tools connection to it
# using the provided username and password, it will set up a private endpoint if necessary
# after that, it will execute a select statement to validate that it is working.
#
# Oci profile to use, this will be used to perform all operations, please make sure the user has all necessary access.
ociProfile=DEFAULT
# Mandatory autonomous database id to use in the test
autonomousDatabaseId=ocid1.autonomousdatabase.oc1.phx.changeme
# Mandatory vault id to use in the test
vaultId=ocid1.vault.oc1.phx.changeme
# Mandatory Database User Name
dbUser=admin
# Mandatory Database User Password
dbPassword=changeme
# Test statement to use in the executeSql test
testStatement=select 1 from dual
# Name of the wallet secret name that will be created, change only if you have conflicts or want to test with different wallets
walletSecretName=sample-test-wallet
# Name of the wallet secret name that will be created, change only if you have conflicts or want to test with different passwords
passwordSecretName=sample-test-password
# If set to false AND the database does not enforce Mtls Connections, no wallet will be used when creating the database tools connection
mtlsConnectionRequired=true
#######################################################################################
# Properties past this point are ignored, they are listed here for documentation purpose only
# When the tests are run, these properties will be set in a file called <testconfigdir>/resources.properties
# these resources will be re-used in subsequent runs to avoid creating too many.
#######################################################################################
# Secret id containing the stored password (Will be created and set by the test)
# dbPasswordSecretId=
# Secret id containing the stored wallet (Will be created and set by the test)
# dbWalletSecretId=
# Database Tools Private Endpoint Id (Will be created and set by the test)
# dbtoolsPrivateEndpointId=
# Database Tools Connection Id (Will be create and set by the test)
# dbtoolsConnectionId=


